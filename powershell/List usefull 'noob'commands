Get-Help—The Get-Help cmdlet helps you learn how to use PowerShell. Get-Help not only explains the syntax of commands, but it also provides examples of how to use them. The following example shows how to use Get-Help to learn about the PowerShell Help system itself:

  get-help

cd—You can use the good ole’ cd (Change Directory) command to navigate between folders. Under the covers, cd is an alias for the Set- Location cmdlet. What sets this command apart from the old Windows shell cd command is its ability to navigate the registry. To use cd to go into the HKEY_LOCAL_MACHINE\SOFTWARE subkey, you would enter

  cd hklm:\software

Get-Alias—PowerShell has more than a hundred different aliases. Plus, you can create custom aliases with the New-Alias cmdlet. Use the Get-Alias cmdlet (or its alias, gal) to list all the Power-Shell aliases along with their native counterparts:

  gal | select name, definition

Get-Command—You use the Get-Command cmdlet to retrieve a list of the hundreds of available commands. PowerShell’s support for wildcards helps you narrow your searches. The following example retrieves all the commands that begin with get:

  get-command get*

Set-Content—Set-Content (or its alias, sc) is used to write values to a file. If the specified target file doesn’t exist, this command creates it. For example, the following command writes the value “My data” to the file named mynewfile.txt:

  sc c:\temp\mynewfile.txt -value “My data”

Get-Content—The counterpart to sc is Get-Content (gc). The gc cmdlet is used to read the contents of a file. For example, the following command displays the contents of the file named mynewfile.txt:

  gc c:\temp\mynewfile.txt

Set-ExecutionPolicy—By default, PowerShell’s ability to run scripts is disabled; you can only enter commands at the command line. The Set-ExecutionPolicy cmdlet lets you change the security level for running scripts. To enable PowerShell to run any script, you can enter the following command:

  set-executionpolicy unrestricted

Set-PsDebug—Although PowerShell doesn’t have a full-featured debugger, it does have basic debugging capabilities through the Set-PsDebug cmdlet. Entering the following command will cause a PowerShell script to step through its execution one line at a time:

  set-psdebug -step

Get-Process—PowerShell has great built-in commands that let you perform many tasks that formerly required resource kits or third-party tools. For example, the Get-Process cmdlet retrieves information about the active processes on a system. Use the following example to list all running processes:

  get-process

Get-Eventlog—The Get-Eventlog cmdlet retrieves Windows event logs. As with Get-Process, there’s no need for additional utilities. The following example shows how you can retrieve the 10 most recent entries from the system event log:

  get-eventlog -newest 10 -logname system 

***Managing Modules
How to find loaded Modules?

Get-Module
How to find available modules?

Get-Module -ListAvailable
How to import a Module?

import-module activedirectory
How to get help for Modules?

Get-Help about_module
How to import All modules all together.

Get-Module -ListAvailable | Import-Module -Verbose
How to find particular module commands ?

Get-Command -Module activedirectory
How to find Module name of the CMDLETs

get-command get-*

***Getting Help
How to get Particular CMDLET help?
get-help Get-Service 

get-help Get-Service -Full

get-help Get-Service -Detailed

get-help Get-Service -ShowWindow

get-help Get-Service -Online

get-help Get-Service -Examples
How to get full help  of a Module (e.g. grouppolicy, activedirectory)

GCM -Module grouppolicy | Foreach {get-help $_.name -Examples} GCM -Module activedirectory | Foreach {get-help $_.name -Examples}   
How to Update Powershell Help

Update-Help -Force

***Powershell environment
How to check Powershell Path

$Pshome
How to find Powershell Alias

GAL
How to find a particular Alias
#GAL is the Alias of  Get-Alias
GAL -Definition Get-Service
How to check Powershell Version?
Environment Variable to get PowerShell Version

$PSVersionTable

OR

($PSVersionTable).BuildVersion

=================================

$host.Version.Major OR $psversiontable OR Get-Host | Select-Object Version
How to change the execution Policy?
Set-ExecutionPolicy Unrestricted
or

Set-ExecutionPolicy Unrestricted CurrentUser

#Without Prompt

Set-ExecutionPolicy Unrestricted -force

#Recomendad seeting is Allsigned/Remotesigned

#There are Five Policies-Restricted(Default Setting),Unrestricted,Allsigned,

  Remotesigned & Bypass.
***System Management
Event Log
When & who rebooted the system? (Below simplified command is required Powershell 3 & above, "?" is used for "where")
Get-EventLog -log System | ? EventID -EQ 12 | select username,TimeGenerated

or

Get-EventLog -log System | where EventID -EQ 12 | select username,TimeGenerated

or

Get-EventLog System | ? Source -eq user32 | select MachineName,TimeGenerated,UserName,Message -First 1
How to find LastBootupTime ? (Required Powershell 3 & above)

Get-CimInstance Win32_OperatingSystem | select  csname,LastBootUpTime

Getting Computer OS & SP for multiple Computers
$computers = get-content C:\computers.txt
Get-WmiObject win32_operatingsystem -ComputerName $computers  | select CSName,Caption, CSDVersion | FL

***How to enable WinRM ?

winrm qc

***Directory Servcies
Find attributes from bulk computers.
Function Com-Attrs {
$Computers= get-content C:\computers.txt
foreach ($Computer in $computers)
{
 
Get-ADComputer $Computer | 
Select-Object DNSHostName,Enabled,SamAccountName
 
    }
 
}
Com-Attrs | FT -AutoSize

**WSMAN Registry key

HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\WSMAN
**How to check WINRM Settings.

winrm get winrm/config
**How to change "MaxEnvelopeSizekb" value ?

winrm set winrm/config @{MaxEnvelopeSizekb="1024"}
**Remotely getting NTP Servers from PDC - Below is the Code

$computer = [System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain().PdcRoleOwner.Name 
$Reg = [Microsoft.Win RegistryKey]::OpenRemoteBaseKey('LocalMachine', $computer) 
$RegKey= $Reg.OpenSubKey("SYSTEM\\CurrentControlSet\\Services\\W32Time\\Parameters") 
$NTP = $Regkey.GetValue("NtpServer") 
Write-host $NTP -BackgroundColor DarkMagenta -ForegroundColor Cyan

DCs Inventory 

[system.directoryservices.activedirectory.domain]::GetCurrentDomain().DomainControllers | Select Name,IPAddress,OSVersion,SiteName | FT -AutoSize
Getting the Domain Functional level

[system.directoryservices.activedirectory.domain]::GetCurrentDomain().DomainMode
Getting the Forest Functional level

[system.directoryservices.activedirectory.forest]::GetCurrentForest().ForestMode
Getting the Trust

[system.directoryservices.activedirectory.domain]::GetCurrentDomain().GetTrustRelationship()
*How to restore the ActiveDirectory Objects
. See the Tombstone
Get-ADObject -Filter {LastKnownparent -eq "OU=ADFS,DC=Contoso,DC=COM"} -IncludeDeletedObjects
 
 Restore the Object
Get-ADObject -Filter {LastKnownparent -eq "OU=ADFS,DC=Contoso,DC=COM"} -IncludeDeletedObjects | Restore-ADObject -NewName bshwjt
See the deleted Objects From Active Directory Recycle BIN
##Prerequsites : . WIndows 2008 R2 DFL 2) Active Directory Recycle Bin
Get-ADObject –SearchBase “CN=Deleted Objects,DC=Contoso,DC=Com” –ldapFilter “(objectClass=*)” -includeDeletedObjects | FL *
Total Sites
[system.directoryservices.activedirectory.forest]::GetCurrentForest().Sites.Count
All Sites Name
 
[system.directoryservices.activedirectory.forest]::GetCurrentForest().Sites.name
DCs 
[system.directoryservices.activedirectory.domain]::GetCurrentDomain().DomainControllers
Nos. of DCs
 
[system.directoryservices.activedirectory.domain]::GetCurrentDomain().DomainControllers.Count
Logon Information
Get-ItemProperty -Path 'HKCU:\Volatile Environment'
How to check Active directory recycle bin enabled or not ?

Get-ADOptionalFeature -F 'name -like "Recycle Bin Feature"' | Select-Object EnabledScopes

Active directory recycle bin is disabled ,If above command output is empty.

 
Get the permission of an User for an OU

ipmo activedirectory

cd ad:

$ACL = get-acl 'AD:\OU=cno,ou=cno,Dc=contoso,DC=com' | select -exp Access | ? IdentityReference -match 'kerbtest'

$ACL
